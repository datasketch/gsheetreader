"use strict";var e="undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},t=require("node-fetch");module.exports=function(e,s){return/^\/\//.test(e)&&(e="https:"+e),t.call(this,e,s)},e.fetch||(e.fetch=module.exports,e.Response=t.Response,e.Headers=t.Headers,e.Request=t.Request);var s={makeQuery:async function(e){try{const t=await fetch(e);return(await t.json()).feed.entry}catch(e){throw new Error(e)}}};module.exports=class{getTable(e){const t=[],s=Math.max(...e.map((e=>+e.gs$cell.col))),r=Math.max(...e.map((e=>+e.gs$cell.row)));for(let e=0;e<r;e++){const e=Array(s);t.push(e)}for(const s of e){const e=+s.gs$cell.row,r=+s.gs$cell.col;t[e-1][r-1]=+s.gs$cell.numericValue||s.gs$cell.$t.trim()}for(let e=0;e<r;e++)for(let s=0;s<t[e].length;s++)t[e][s]||(t[e][s]="");return{table:t,size:{cols:s,rows:r}}}async getJSON(e,t=1){if(!e)throw new Error("id parameter is missing");const r=`https://spreadsheets.google.com/feeds/cells/${e}/${t}/public/values?alt=json`;try{const e=await s.makeQuery(r),{table:t,size:o}=this.getTable(e),l=t.shift();return{data:t.map((e=>e.reduce(((e,t,s)=>(e[l[s]]=t,e)),{}))),headers:l,size:o}}catch(e){throw new Error(e)}}};
