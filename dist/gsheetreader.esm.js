export default class{getTable(e){const t=[],r=Math.max(...e.map((e=>+e.gs$cell.col))),s=Math.max(...e.map((e=>+e.gs$cell.row)));for(let e=0;e<s;e++){const e=Array(r);t.push(e)}for(const r of e){const e=+r.gs$cell.row,s=+r.gs$cell.col;t[e-1][s-1]=+r.gs$cell.numericValue||r.gs$cell.$t.trim()}for(let e=0;e<s;e++)for(let r=0;r<t[e].length;r++)t[e][r]||(t[e][r]="");return{table:t,size:{cols:r,rows:s}}}async getJSON(e,t=1){if(!e)throw new Error("id parameter is missing");const r=`https://spreadsheets.google.com/feeds/cells/${e}/${t}/public/values?alt=json`;try{const e=await async function(e){try{const t=await fetch(e);return(await t.json()).feed.entry}catch(e){throw new Error(e)}}(r),{table:t,size:s}=this.getTable(e),a=t.shift();return{data:t.map((e=>e.reduce(((e,t,r)=>(e[a[r]]=t,e)),{}))),headers:a,size:s}}catch(e){throw new Error(e)}}}
